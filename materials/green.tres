[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 1.2, 1, 1.2 ]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0, 1, 0, 1 )

[sub_resource type="VisualShader" id=1]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:5
	vec3 n_out5p0 = vec3(0.000000, 1.000000, 0.000000);
	float n_out5p1 = 1.000000;

// ScalarOp:4
	float n_in4p1 = 1.20000;
	float n_out4p0 = n_out5p1 * n_in4p1;

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -545.704, 154.798 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 280, 200 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -20, 280 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -240, 200 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 5, 1, 4, 0, 4, 0, 0, 1 )

[resource]
shader = SubResource( 1 )
